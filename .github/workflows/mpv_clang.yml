name: mpv clang
defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      command:
        description: 'Run custom command before building'
        required: false
        type: string
      mpv_tarball:
        description: 'Build latest mpv tarball'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

env:
  HTTP_PROXY: http://172.29.48.1:7897
  HTTPS_PROXY: http://172.29.48.1:7897
  NO_PROXY: localhost,127.0.0.1

jobs:
  build_mpv:
    name: Building mpv for win
    runs-on: ubuntu-latest
    env:
      BIT: "x86_64"
    container:
      image: ghcr.io/shinchiro/archlinux:latest
    outputs:
      mpv_ver: 0.40.0
    steps:
      - name: Init variable
        run: |
          if [[ $BIT == "i686" ]]; then
            echo "arch=i686" >> $GITHUB_ENV
          elif [[ $BIT == "x86_64" ]]; then
            echo "arch=x86_64" >> $GITHUB_ENV
          elif [[ $BIT == "x86_64_v3" ]]; then
            echo "arch=x86_64" >> $GITHUB_ENV
            echo "x86_64_level=-v3" >> $GITHUB_ENV
            echo "x86_64_v3_ARCH=-DGCC_ARCH=x86-64-v3" >> $GITHUB_ENV
          elif [[ $BIT == "aarch64" ]]; then
            echo "arch=aarch64" >> $GITHUB_ENV
          fi

      - name: Setup git config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD

      - uses: actions/checkout@main
        with:
          ref: master

      - name: Loading clang sysroot cache
        uses: actions/cache/restore@main
        with:
          path: |
            clang_root
          key: clang_root-x86_64
          restore-keys: |
            clang_root

      - name: Loading repository cache
        uses: actions/cache/restore@main
        with:
          path: src_packages
          key: repository-x86_64
          restore-keys: |
            repository

      - name: Loading x86_64 toolchain cache
        uses: actions/cache/restore@main
        with:
          path: |
            build_x86_64
          key: clang-x86_64_toolchain
          restore-keys: |
            clang-x86_64_toolchain

      - name: Running custom command
        if: ${{ github.event.inputs.command != '' }}
        continue-on-error: true
        run: ${{ github.event.inputs.command }}

      - name: Configuring CMake & Downloading source
        run: |
          cmake -DTARGET_ARCH=${{ env.arch }}-w64-mingw32 -DCOMPILER_TOOLCHAIN=clang ${{ env.x86_64_v3_ARCH }} -DCMAKE_INSTALL_PREFIX=$PWD/clang_root -DMINGW_INSTALL_PREFIX=$PWD/build_$BIT/$BIT-w64-mingw32 -DSINGLE_SOURCE_LOCATION=$PWD/src_packages -DENABLE_CCACHE=ON -DCLANG_PACKAGES_LTO=ON -G Ninja --fresh -B build_$BIT -S $PWD
          ninja -C build_$BIT download || true

      - name: Building mpv
        id: build_mpv_step
        env:
          MPV_TARBALL: ${{ github.event.inputs.mpv_tarball }}
        run: |
          ninja -C build_$BIT update
          $MPV_TARBALL && ninja -C build_$BIT mpv-release || ninja -C build_$BIT mpv
          $MPV_TARBALL && echo "mpv_ver=$(cat build_$BIT/packages/mpv-release-prefix/VERSION)" >> $GITHUB_OUTPUT || echo "mpv_ver=UNKNOWN" >> $GITHUB_OUTPUT

      - name: Packaging mpv
        run: |
          mkdir -p release_$BIT
          ninja -C build_$BIT mpv-packaging; mv build_$BIT/mpv*.7z release_$BIT

      - name: Copying ffmpeg
        run: |
          hash=$(git -C src_packages/ffmpeg rev-parse --short HEAD)
          7z a -m0=lzma2 -mx=9 -ms=on release_$BIT/ffmpeg-${{ env.arch }}${{ env.x86_64_level }}-git-$hash.7z ./build_$BIT/$BIT-w64-mingw32/bin/ffmpeg.exe

      - name: Collecting logs
        if: always()
        run: |
          mkdir -p build_${BIT}_logs
          cp -fr $(find build_$BIT -type f -iname "*-*.log" -or -wholename "*/ffbuild/config.log") build_${BIT}_logs || true
          7z a -m0=lzma2 -mx=9 -ms=on logs.7z build*logs

      - name: Saving clang sysroot cache
        uses: actions/cache/save@main
        if: ${{ always() }}
        with:
          path: |
            clang_root
          key: clang_root

      - name: Saving repository cache
        uses: actions/cache/save@main
        if: ${{ always() }}
        with:
          path: src_packages
          key: repository

      - name: Saving x86_64 toolchain cache
        uses: actions/cache/save@main
        if: always()
        with:
          path: |
            build_x86_64
          key: clang-x86_64_toolchain

      - name: Saving release_x86_64 cache
        uses: actions/cache/save@main
        with:
          path: release_x86_64
          key: release_x86_64
