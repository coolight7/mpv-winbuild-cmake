name: llvm toolchain

on:
  push:
    branches:
      - main

permissions:
  contents: write

env:
  HTTP_PROXY: http://172.29.48.1:7897
  HTTPS_PROXY: http://172.29.48.1:7897
  NO_PROXY: localhost,127.0.0.1

jobs:
  build_llvm:
    name: Building LLVM and Clang
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/shinchiro/archlinux:latest
    steps:
      - name: Setup git config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Loading clang root
        id: clang_root_cache
        uses: actions/cache/restore@main
        with:
          path: clang_root
          key: clang_root
          restore-keys: clang_root

      - name: Loading x86_64 toolchain
        id: x86_64_cache
        uses: actions/cache/restore@main
        with:
          path: build_x86_64
          key: clang-x86_64_toolchain
          restore-keys: clang-x86_64_toolchain

      - name: Loading repository cache
        id: repository_cache
        if: false
        uses: actions/cache/restore@main
        with:
          path: src_packages
          key: repository
          restore-keys: repository

      - name: Building LLVM with IR Profile Instrumentation
        run: |
          cmake -DTARGET_ARCH=x86_64-w64-mingw32 -DLLVM_ENABLE_PGO=GEN -DCOMPILER_TOOLCHAIN=clang -DCMAKE_INSTALL_PREFIX=$PWD/clang_root -DMINGW_INSTALL_PREFIX=$PWD/build_x86_64/x86_64-w64-mingw32 -DSINGLE_SOURCE_LOCATION=$PWD/src_packages -G Ninja -B build_x86_64 -S $PWD
          ninja -C build_x86_64 llvm

      - name: Building x86_64 toolchain
        run: |
          cmake -DTARGET_ARCH=x86_64-w64-mingw32 -DLLVM_ENABLE_PGO=GEN -DCOMPILER_TOOLCHAIN=clang -DCMAKE_INSTALL_PREFIX=$PWD/clang_root -DMINGW_INSTALL_PREFIX=$PWD/build_x86_64/x86_64-w64-mingw32 -DSINGLE_SOURCE_LOCATION=$PWD/src_packages -G Ninja -B build_x86_64 -S $PWD
          ninja -C build_x86_64 llvm-clang

      - name: PGO training with shaderc
        run: |
          cmake -DTARGET_ARCH=x86_64-w64-mingw32 -DLLVM_ENABLE_PGO=GEN -DCLANG_PACKAGES_LTO=ON -DCOMPILER_TOOLCHAIN=clang -DCMAKE_INSTALL_PREFIX=$PWD/clang_root -DMINGW_INSTALL_PREFIX=$PWD/build_x86_64/x86_64-w64-mingw32 -DSINGLE_SOURCE_LOCATION=$PWD/src_packages -G Ninja -B build_x86_64 -S $PWD
          ninja -C build_x86_64 shaderc

      - name: Merging profraw to profdata
        run: |
          llvm-profdata merge $PWD/clang_root/profiles/*.profraw -o llvm.profdata
          rm -rf $PWD/clang_root/profiles/* || true

      - name: Building LLVM with PGO
        run: |
          cmake -DTARGET_ARCH=x86_64-w64-mingw32 -DLLVM_ENABLE_PGO=USE -DLLVM_PROFDATA_FILE="llvm.profdata" -DCOMPILER_TOOLCHAIN=clang -DCMAKE_INSTALL_PREFIX=$PWD/clang_root -DMINGW_INSTALL_PREFIX=$PWD/build_x86_64/x86_64-w64-mingw32 -DSINGLE_SOURCE_LOCATION=$PWD/src_packages -G Ninja -B build_x86_64 -S $PWD
          ninja -C build_x86_64 llvm

      - name: Cleanup
        run: |
          rm -rf {build_i686,build_x86_64,build_x86_64_v3,build_aarch64}/{toolchain,packages} || true

      - name: Collecting logs
        if: always()
        run: |
          mkdir -p build_x86_64_logs build_i686_logs build_aarch64_logs
          cp -fr $(find build_x86_64 -type f -iname "*-*.log") build_x86_64_logs || true
          cp -fr $(find build_i686 -type f -iname "*-*.log") build_i686_logs || true
          cp -fr $(find build_aarch64 -type f -iname "*-*.log") build_aarch64_logs || true
          7z a -m0=lzma2 -mx=9 -ms=on logs.7z build*logs

      - name: Saving clang root
        uses: actions/cache/save@main
        with:
          path: clang_root
          key: clang_root

      - name: Saving x86_64 toolchain
        uses: actions/cache/save@main
        with:
          path: build_x86_64
          key: clang-x86_64_toolchain

      - name: Saving repository cache
        if: false
        uses: actions/cache/save@main
        with:
          path: src_packages
          key: repository

